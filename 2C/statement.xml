<?xml version="1.0" encoding="utf-8" ?>
<problem package="ru.ejudge.sample_contest" id="2C" type="standard">
  <statement language="ru_RU">
    <title>Кратчайший путь</title>
    <description>
      <p>Задано поле <b>F</b>, на котором есть проходимые клетки '.', непроходимые '#' и единственный символ 'x'. Стоя в какой-то клетке можно перейти в соседнюю слева, справа, сверху или снизу. Нельзя переходить в непроходимые клетки '#'. Найдите и выведите кратчайший путь из левого верхнего угла поля (точки (0;0)) до клетки с меткой 'x'. Гарантируется, что такой путь существует.</p>
      <p><i>Обратите внимание, что в этой задаче для записи координат клетки в первую очередь записывается столбец, а затем строка клетки.</i></p>
      <p>
        Например если задано поле.<br/>
        <pre>
  0  1  2  3  4 
0 .  #  .  .  . 
1 .  #  .  #  x 
2 .  .  .  #  # 
3 .  #  .  .  # 
4 .  .  .  #  # 
        </pre>
        То кратчайший путь из клетки (0;0) до клетки (4;1) будет через следующие клетки:<br/><pre>(0;0) (0;1) (0;2) (1;2) (2;2) (2;1) (2;0) (3;0) (4;0) (4;1)</pre>Что соответствует пути на поле помеченом символом '+':<br/>
        <pre>
  0  1  2  3  4 
0 +  #  +  +  + 
1 +  #  +  #  x 
2 +  +  +  #  # 
3 .  #  .  .  # 
4 .  .  .  #  # 
        </pre>
      </p>
    </description>
    <input_format><p>Первая строка содержит два числа <b>N</b> и <b>M</b> (1&le;N,M&le;1000), соответственно количество столбцов и строк поля <b>F</b>. Далее следуют <b>N</b> строк, на каждой из которых 3 * <b>M</b> символов. На <b>i</b>-й строке символ на позиции 3 * <b>j</b> + 1 задаёт клетку F<sub>i,j</sub>. Или другими словами, каждый клетка окружена пробелом слева и справа. </p></input_format>
    <output_format><p>В единой строке выведите последовательность координат клеток в формате <b>(столбец;строка)</b>, через которые пролегает искомый путь. Разделяйте координаты одним пробелом. Если кратчайших путей несколько, выведите любой из них.</p></output_format>
  </statement>
  <examples>
    <example>
      <input>
5 5
 .  #  .  .  . 
 .  #  .  #  x 
 .  .  .  #  # 
 .  #  .  .  # 
 .  .  .  #  # 
      </input>
      <output>(0;0) (0;1) (0;2) (1;2) (2;2) (2;1) (2;0) (3;0) (4;0) (4;1)</output>
    </example>
    <example>
      <input>
3 2
 .  . 
 #  . 
 x  . 
      </input>
      <output>(0;0) (1;0) (1;1) (1;2) (0;2)</output>
    </example>
  </examples>
</problem>
